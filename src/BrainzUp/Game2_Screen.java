/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BrainzUp;

import java.awt.CardLayout;
import java.awt.LayoutManager;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author Dennis
 */
public class Game2_Screen extends javax.swing.JPanel {

    private ArrayList<GameInfo> gameRound;
    Integer[] mixes = new Integer[]{1, 2, 3};
    Integer[] random1 = new Integer[5];
    Integer[] random2 = new Integer[4];
    ArrayList<Member> current;
    File inFile;
    FileInputStream finStream;
    ObjectInputStream oinStream;
    File outFile;
    FileOutputStream fStream;
    ObjectOutputStream oStream;
    int correctAnswer = 0;
    int round;
    int score;
    String correct;
    String subject;
    String userName;
    Integer[] corAnswer;
    int game;

    /**
     * Creates new form Game2_Screen
     */
    public Game2_Screen() {
        initComponents();
        ArrayList<GameInfo> gameRound = new ArrayList<>();
        corAnswer = new Integer[6];
        game = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Logo = new javax.swing.JLabel();
        BackBtn = new javax.swing.JButton();
        Option1 = new javax.swing.JLabel();
        Option2 = new javax.swing.JLabel();
        Option3 = new javax.swing.JLabel();
        Listen = new javax.swing.JLabel();
        curPlayer = new javax.swing.JLabel();
        GameName = new javax.swing.JLabel();
        Sound = new javax.swing.JButton();
        CW_Bkgrd = new javax.swing.JLabel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Logo.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 40)); // NOI18N
        Logo.setForeground(new java.awt.Color(0, 153, 0));
        Logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Logo.setText("BrainzUp");
        add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 230, -1));

        BackBtn.setBackground(new java.awt.Color(255, 255, 255));
        BackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/back.png"))); // NOI18N
        BackBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BackBtn.setContentAreaFilled(false);
        BackBtn.setOpaque(true);
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });
        add(BackBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 80, 70));

        Option1.setBackground(new java.awt.Color(255, 255, 255));
        Option1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Option1.setOpaque(true);
        Option1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Option1MouseClicked(evt);
            }
        });
        add(Option1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 150, 80));

        Option2.setBackground(new java.awt.Color(255, 255, 255));
        Option2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Option2.setOpaque(true);
        Option2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Option2MouseClicked(evt);
            }
        });
        add(Option2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 195, 150, 80));

        Option3.setBackground(new java.awt.Color(255, 255, 255));
        Option3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Option3.setOpaque(true);
        Option3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Option3MouseClicked(evt);
            }
        });
        add(Option3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 290, 150, 80));

        Listen.setBackground(new java.awt.Color(255, 255, 255));
        Listen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/listen.jpeg"))); // NOI18N
        Listen.setText(" ");
        Listen.setOpaque(true);
        Listen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ListenMousePressed(evt);
            }
        });
        Listen.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                ListenComponentShown(evt);
            }
        });
        add(Listen, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 210, 240));

        curPlayer.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        curPlayer.setForeground(new java.awt.Color(0, 0, 204));
        curPlayer.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        add(curPlayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        GameName.setBackground(new java.awt.Color(153, 153, 255));
        GameName.setFont(new java.awt.Font("Lucida Grande", 1, 22)); // NOI18N
        GameName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GameName.setText("Listen Up!");
        GameName.setOpaque(true);
        add(GameName, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 230, -1));

        Sound.setBackground(new java.awt.Color(255, 255, 255));
        Sound.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/images.jpg"))); // NOI18N
        Sound.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Sound.setContentAreaFilled(false);
        Sound.setOpaque(true);
        Sound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SoundActionPerformed(evt);
            }
        });
        add(Sound, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 100, 70));

        CW_Bkgrd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hand_wallpaper.jpg"))); // NOI18N
        CW_Bkgrd.setMaximumSize(new java.awt.Dimension(0, 0));
        CW_Bkgrd.setMinimumSize(new java.awt.Dimension(0, 0));
        CW_Bkgrd.setPreferredSize(new java.awt.Dimension(0, 0));
        add(CW_Bkgrd, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, 420));
    }// </editor-fold>//GEN-END:initComponents

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "PLAY");
        }
    }//GEN-LAST:event_BackBtnActionPerformed

    private void Option1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Option1MouseClicked
        // TODO add your handling code here:
        if (correctAnswer == 1) {
            score = score + 1;
            correct = "true";
        }
        round = round + 1;
        ArrayList<GameInfo> gameRound = new ArrayList<>();
        GameInfo r = new GameInfo(round, score, subject, correct, userName, game);
        gameRound.add(r);
        try {
            outFile = new File("./src/SaveFiles/gameInfo.dat");
            fStream = new FileOutputStream(outFile);
            oStream = new ObjectOutputStream(fStream);
            oStream.writeObject(gameRound);
            oStream.close();
        } catch (IOException e) {
            System.out.println(e);
        }
        gameRound.clear();
        Option1.setIcon(null);
        Option2.setIcon(null);
        Option3.setIcon(null);
        
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "CW");
        }
    }//GEN-LAST:event_Option1MouseClicked

    private void Option2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Option2MouseClicked
        // TODO add your handling code here:
        if (correctAnswer == 2) {
            score = score + 1;
            correct = "true";
        }
        round = round + 1;
        ArrayList<GameInfo> gameRound = new ArrayList<>();
        GameInfo r = new GameInfo(round, score, subject, correct, userName, game);
        gameRound.add(r);
        try {
            outFile = new File("./src/SaveFiles/gameInfo.dat");
            fStream = new FileOutputStream(outFile);
            oStream = new ObjectOutputStream(fStream);
            oStream.writeObject(gameRound);
            oStream.close();
        } catch (IOException e) {
            System.out.println(e);
        }
        gameRound.clear();
            
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "CW");
        }
    }//GEN-LAST:event_Option2MouseClicked

    private void Option3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Option3MouseClicked
        // TODO add your handling code here:
        if (correctAnswer == 3) {
            score = score + 1;
            correct = "true";
        }
        round = round + 1;
        ArrayList<GameInfo> gameRound = new ArrayList<>();
        GameInfo r = new GameInfo(round, score, subject, correct, userName, game);
        gameRound.add(r);
        try {
            outFile = new File("./src/SaveFiles/gameInfo.dat");
            fStream = new FileOutputStream(outFile);
            oStream = new ObjectOutputStream(fStream);
            oStream.writeObject(gameRound);
            oStream.close();
        } catch (IOException e) {
            System.out.println(e);
        }
        gameRound.clear();
        Option1.setIcon(null);
        Option2.setIcon(null);
        Option3.setIcon(null);
        
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "CW");
        }
    }//GEN-LAST:event_Option3MouseClicked

    private void ListenComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_ListenComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_ListenComponentShown

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        Option1.setIcon(null);
        Option2.setIcon(null);
        Option3.setIcon(null);
        ObjectInputStream in = null;
        try {
            // code found on http://www.jguru.com/faq/view.jsp?EID=34789
            in = new ObjectInputStream(new FileInputStream("./src/SaveFiles/randoms.ser"));
            corAnswer = (Integer[]) in.readObject();
            in.close();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(Game1_Screen.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                in.close();
            } catch (IOException ex) {
                Logger.getLogger(Game1_Screen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        try {
            inFile = new File("./src/SaveFiles/current.dat");
            finStream = new FileInputStream(inFile);
            oinStream = new ObjectInputStream(finStream);
            current = (ArrayList<Member>) oinStream.readObject();
            for (Member r : current) {
                userName = r.getName();
                oinStream.close();
            }
            current.clear();
        } catch (IOException | ClassNotFoundException | NullPointerException e) {
            System.out.println(e);
        }
        curPlayer.setText(userName);

        try {
            inFile = new File("./src/SaveFiles/gameInfo.dat");
            finStream = new FileInputStream(inFile);
            oinStream = new ObjectInputStream(finStream);
            gameRound = (ArrayList<GameInfo>) oinStream.readObject();
            for (GameInfo r : gameRound) {
                round = r.getRound();
                score = r.getScore();
                subject = r.getSubject();
                game = r.getGame();
                oinStream.close();
            }
            gameRound.clear();
        } catch (IOException | ClassNotFoundException | NullPointerException e) {
            System.out.println(e);
        }
        correct = "false";

        String sound = "";
        switch (subject) {
            case "animals":
                sound = "./src/Sounds/A" + corAnswer[round - 1] + ".wav";
                break;
            case "colours":
                sound = "./src/Sounds/C" + corAnswer[round - 1] + ".wav";
                break;
            case "numbers":
                sound = "./src/Sounds/N" + corAnswer[round - 1] + ".wav";
                break;
            case "shapes":
                sound = "./src/Sounds/S" + corAnswer[round - 1] + ".wav";
                break;
        }
        AudioPlayer player = new AudioPlayer();
        player.play(sound);
        
        int quest = corAnswer[round - 1];
        int iter = 0;
        for (int i = 0; i < corAnswer.length; i++) {
            if (corAnswer[i] != quest) {
                random1[iter] = corAnswer[i];
                iter++;
            }
        }
        Collections.shuffle(Arrays.asList(random1));
        int rand1 = random1[0];

        for (int i = 1; i < random1.length; i++) {
            random2[i - 1] = random1[i];
        }
        Collections.shuffle(Arrays.asList(random2));
        int rand2 = random2[0];

        ImageIcon answerPic = new ImageIcon(getClass().getResource("/GameImages/" + subject + "B" + quest + ".png"));
        ImageIcon random1Pic = new ImageIcon(getClass().getResource("/GameImages/" + subject + "B" + rand1 + ".png"));
        ImageIcon random2Pic = new ImageIcon(getClass().getResource("/GameImages/" + subject + "B" + rand2 + ".png"));

        Collections.shuffle(Arrays.asList(mixes));
        switch (mixes[0]) {
            case 1:
                Option1.setIcon(answerPic);
                Option2.setIcon(random1Pic);
                Option3.setIcon(random2Pic);
                correctAnswer = 1;
                break;
            case 2:
                Option1.setIcon(random1Pic);
                Option2.setIcon(answerPic);
                Option3.setIcon(random2Pic);
                correctAnswer = 2;
                break;
            case 3:
                Option1.setIcon(random2Pic);
                Option2.setIcon(random1Pic);
                Option3.setIcon(answerPic);
                correctAnswer = 3;
                break;
        }
    }//GEN-LAST:event_formComponentShown

    private void ListenMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListenMousePressed
        String sound = "";
        switch (subject) {
            case "animals":
                sound = "./src/Sounds/A" + corAnswer[round - 1] + ".wav";
                break;
            case "colours":
                sound = "./src/Sounds/C" + corAnswer[round - 1] + ".wav";
                break;
            case "numbers":
                sound = "./src/Sounds/N" + corAnswer[round - 1] + ".wav";
                break;
            case "shapes":
                sound = "./src/Sounds/S" + corAnswer[round - 1] + ".wav";
                break;
        }

        AudioPlayer player = new AudioPlayer();
        player.play(sound);
    }//GEN-LAST:event_ListenMousePressed

    private void SoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SoundActionPerformed
        // TODO add your handling code here:
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "SOUND");
        }
    }//GEN-LAST:event_SoundActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JLabel CW_Bkgrd;
    private javax.swing.JLabel GameName;
    private javax.swing.JLabel Listen;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel Option1;
    private javax.swing.JLabel Option2;
    private javax.swing.JLabel Option3;
    private javax.swing.JButton Sound;
    private javax.swing.JLabel curPlayer;
    // End of variables declaration//GEN-END:variables
}
