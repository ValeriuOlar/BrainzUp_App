/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BrainzUp;

import java.awt.CardLayout;
import java.awt.LayoutManager;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author Dennis
 */
public class PlayPnl extends javax.swing.JPanel {

    private Object jLabel2;
    private ArrayList<GameInfo> gameSub;
    private ArrayList<Member> current;
    Integer[] randoms = new Integer[]{1, 2, 3, 4, 5, 6};
    Integer[] mixes = new Integer[]{1, 2, 3};
    File inFile;
    FileInputStream finStream;
    ObjectInputStream oinStream;
    File outFile;
    FileOutputStream fStream;
    ObjectOutputStream oStream;
    String userName = "";

    /**
     * Creates new form PlayPnl
     */
    public PlayPnl() {
        initComponents();
        gameSub = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnNumber = new javax.swing.JLabel();
        BtnShape = new javax.swing.JLabel();
        BtnColour = new javax.swing.JLabel();
        BtnAnimal = new javax.swing.JLabel();
        Home = new javax.swing.JButton();
        curPlayer = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        ScreenLabel = new javax.swing.JLabel();
        Sound = new javax.swing.JButton();
        ExitBtn = new javax.swing.JButton();
        Play_Background = new javax.swing.JLabel();

        setAlignmentX(0.0F);
        setMinimumSize(new java.awt.Dimension(600, 500));
        setPreferredSize(new java.awt.Dimension(530, 420));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnNumber.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/numbers.jpeg"))); // NOI18N
        BtnNumber.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnNumber.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnNumberMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BtnNumberMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BtnNumberMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BtnNumberMouseEntered(evt);
            }
        });
        add(BtnNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 120, 120));

        BtnShape.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/shapes.jpeg"))); // NOI18N
        BtnShape.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnShape.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnShapeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BtnShapeMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BtnShapeMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BtnShapeMouseEntered(evt);
            }
        });
        add(BtnShape, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 120, 120));

        BtnColour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/colours.jpeg"))); // NOI18N
        BtnColour.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnColour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnColourMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BtnColourMouseReleased(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BtnColourMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BtnColourMouseEntered(evt);
            }
        });
        add(BtnColour, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 100, 120, 120));

        BtnAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/animals.jpeg"))); // NOI18N
        BtnAnimal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnAnimal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BtnAnimalMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BtnAnimalMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnAnimalMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BtnAnimalMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BtnAnimalMouseEntered(evt);
            }
        });
        add(BtnAnimal, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 120, 120));

        Home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.png"))); // NOI18N
        Home.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeActionPerformed(evt);
            }
        });
        add(Home, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 80, 70));

        curPlayer.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        curPlayer.setForeground(new java.awt.Color(0, 0, 204));
        curPlayer.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        add(curPlayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        Logo.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 40)); // NOI18N
        Logo.setForeground(new java.awt.Color(0, 153, 0));
        Logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Logo.setText("BrainzUp");
        add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 230, 40));

        ScreenLabel.setBackground(new java.awt.Color(51, 255, 153));
        ScreenLabel.setFont(new java.awt.Font("Lucida Grande", 1, 22)); // NOI18N
        ScreenLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ScreenLabel.setText("Select Subject");
        ScreenLabel.setOpaque(true);
        add(ScreenLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 230, -1));

        Sound.setBackground(new java.awt.Color(255, 255, 255));
        Sound.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/images.jpg"))); // NOI18N
        Sound.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Sound.setContentAreaFilled(false);
        Sound.setOpaque(true);
        Sound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SoundActionPerformed(evt);
            }
        });
        add(Sound, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 100, 70));

        ExitBtn.setBackground(new java.awt.Color(255, 255, 255));
        ExitBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ExitBtn.setText("Exit");
        ExitBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ExitBtn.setContentAreaFilled(false);
        ExitBtn.setOpaque(true);
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });
        add(ExitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 350, 100, 50));

        Play_Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hand_wallpaper.jpg"))); // NOI18N
        Play_Background.setMaximumSize(new java.awt.Dimension(1049, 1000));
        Play_Background.setMinimumSize(new java.awt.Dimension(1049, 1000));
        Play_Background.setPreferredSize(new java.awt.Dimension(530, 420));
        add(Play_Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, 420));
    }// </editor-fold>//GEN-END:initComponents


    private void BtnNumberMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnNumberMouseEntered
        // Display a bigger version of button when mouse is over it
        ImageIcon numbers = new ImageIcon(getClass().getResource("/Images/numbers_big.jpeg"));
        BtnNumber.setIcon(numbers);
    }//GEN-LAST:event_BtnNumberMouseEntered

    private void BtnNumberMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnNumberMouseExited
        // Display the original button when mouse has left it
        ImageIcon numbers = new ImageIcon(getClass().getResource("/Images/numbers.jpeg"));
        BtnNumber.setIcon(numbers);
    }//GEN-LAST:event_BtnNumberMouseExited

    private void BtnNumberMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnNumberMousePressed
        // Display a brighter version of button when it is pressed
        ImageIcon numbers = new ImageIcon(getClass().getResource("/Images/numbers_bright.jpeg"));
        BtnNumber.setIcon(numbers);
        GameInfo g = new GameInfo(1, 0, "numbers", "false", null, 0);
        gameSub.add(g);
        //The ArrayList is saved to the gameInfo.dat file using the file output process
        try {
            outFile = new File("./src/SaveFiles/gameInfo.dat");
            fStream = new FileOutputStream(outFile);
            oStream = new ObjectOutputStream(fStream);
            oStream.writeObject(gameSub);
            oStream.close();
        } catch (IOException e) {
            System.out.println(e);
        }
        //The ArrayList is cleared
        gameSub.clear();
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "GAMESELECT");
        }
    }//GEN-LAST:event_BtnNumberMousePressed

    private void BtnNumberMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnNumberMouseReleased
        // Display the original button when mouse is released
        ImageIcon numbers = new ImageIcon(getClass().getResource("/Images/numbers_big.jpeg"));
        BtnNumber.setIcon(numbers);
    }//GEN-LAST:event_BtnNumberMouseReleased

    private void BtnShapeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnShapeMousePressed
        // Display a brighter version of animals image when animals image is pressed
        ImageIcon shapes = new ImageIcon(getClass().getResource("/Images/shapes_bright.jpeg"));
        BtnShape.setIcon(shapes);
        GameInfo g = new GameInfo(1, 0, "shapes", "false", null, 0);
        gameSub.add(g);
        //The ArrayList is saved to the gameInfo.dat file using the file output process
        try {
            outFile = new File("./src/SaveFiles/gameInfo.dat");
            fStream = new FileOutputStream(outFile);
            oStream = new ObjectOutputStream(fStream);
            oStream.writeObject(gameSub);
            oStream.close();
        } catch (IOException e) {
            System.out.println(e);
        }
        //The ArrayList is cleared
        gameSub.clear();
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "GAMESELECT");
        }
    }//GEN-LAST:event_BtnShapeMousePressed

    private void BtnShapeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnShapeMouseReleased
        // Display the original button when mouse is released
        ImageIcon shapes = new ImageIcon(getClass().getResource("/Images/shapes_big.jpeg"));
        BtnShape.setIcon(shapes);
    }//GEN-LAST:event_BtnShapeMouseReleased

    private void BtnShapeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnShapeMouseExited
        // Display the original button when mouse has left it
        ImageIcon shapes = new ImageIcon(getClass().getResource("/Images/shapes.jpeg"));
        BtnShape.setIcon(shapes);
    }//GEN-LAST:event_BtnShapeMouseExited

    private void BtnShapeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnShapeMouseEntered
        // Display a bigger version of button when mouse is over it
        ImageIcon shapes = new ImageIcon(getClass().getResource("/Images/shapes_big.jpeg"));
        BtnShape.setIcon(shapes);
    }//GEN-LAST:event_BtnShapeMouseEntered

    private void BtnColourMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnColourMousePressed
        // Display a brighter version of button when it is pressed
        ImageIcon colours = new ImageIcon(getClass().getResource("/Images/colours_bright.jpeg"));
        BtnColour.setIcon(colours);
        GameInfo g = new GameInfo(1, 0, "colours", "false", null, 0);
        gameSub.add(g);
        //The ArrayList is saved to the gameInfo.dat file using the file output process
        try {
            outFile = new File("./src/SaveFiles/gameInfo.dat");
            fStream = new FileOutputStream(outFile);
            oStream = new ObjectOutputStream(fStream);
            oStream.writeObject(gameSub);
            oStream.close();
        } catch (IOException e) {
            System.out.println(e);
        }
        //The ArrayList is cleared
        gameSub.clear();
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "GAMESELECT");
        }
    }//GEN-LAST:event_BtnColourMousePressed

    private void BtnColourMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnColourMouseReleased
        // Display the original button when mouse is released
        ImageIcon colours = new ImageIcon(getClass().getResource("/Images/colours_big.jpeg"));
        BtnColour.setIcon(colours);
    }//GEN-LAST:event_BtnColourMouseReleased

    private void BtnColourMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnColourMouseExited
        // Display the original button when mouse has left it
        ImageIcon colours = new ImageIcon(getClass().getResource("/Images/colours.jpeg"));
        BtnColour.setIcon(colours);
    }//GEN-LAST:event_BtnColourMouseExited

    private void BtnColourMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnColourMouseEntered
        // Display a bigger version of button when mouse is over it
        ImageIcon colours = new ImageIcon(getClass().getResource("/Images/colours_big.jpeg"));
        BtnColour.setIcon(colours);
    }//GEN-LAST:event_BtnColourMouseEntered

    private void BtnAnimalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnAnimalMousePressed
        // Display a brighter version of animals image when animals image is pressed
        ImageIcon animals = new ImageIcon(getClass().getResource("/Images/animals_bright.jpeg"));
        BtnAnimal.setIcon(animals);
        GameInfo g = new GameInfo(1, 0, "animals", "false", null, 0);
        gameSub.add(g);
        //The ArrayList is saved to the gameInfo.dat file using the file output process
        try {
            outFile = new File("./src/SaveFiles/gameInfo.dat");
            fStream = new FileOutputStream(outFile);
            oStream = new ObjectOutputStream(fStream);
            oStream.writeObject(gameSub);
            oStream.close();
        } catch (IOException e) {
            System.out.println(e);
        }
        //The ArrayList is cleared
        gameSub.clear();

        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "GAMESELECT");
        }
    }//GEN-LAST:event_BtnAnimalMousePressed

    private void BtnAnimalMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnAnimalMouseReleased
        // Display the original button when mouse is released
        ImageIcon animals = new ImageIcon(getClass().getResource("/Images/animals_big.jpeg"));
        BtnAnimal.setIcon(animals);
    }//GEN-LAST:event_BtnAnimalMouseReleased

    private void BtnAnimalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnAnimalMouseExited
        // Display the original button when mouse has left it
        ImageIcon animals = new ImageIcon(getClass().getResource("/Images/animals.jpeg"));
        BtnAnimal.setIcon(animals);
    }//GEN-LAST:event_BtnAnimalMouseExited

    private void BtnAnimalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnAnimalMouseEntered
        // Display a bigger version of button when mouse is over it
        ImageIcon animals = new ImageIcon(getClass().getResource("/Images/animals_big.jpeg"));
        BtnAnimal.setIcon(animals);
    }//GEN-LAST:event_BtnAnimalMouseEntered

    private void BtnAnimalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnAnimalMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_BtnAnimalMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        try {
            inFile = new File("./src/SaveFiles/current.dat");
            finStream = new FileInputStream(inFile);
            oinStream = new ObjectInputStream(finStream);
            current = (ArrayList<Member>) oinStream.readObject();
            for (Member r : current) {
                userName = r.getName();
                oinStream.close();
            }
            current.clear();
        } catch (IOException | ClassNotFoundException | NullPointerException e) {
            System.out.println(e);
        }
        curPlayer.setText(userName);
        
        ObjectOutputStream out = null;
        try {
           
            Collections.shuffle(Arrays.asList(randoms));
            // code found on http://www.jguru.com/faq/view.jsp?EID=34789
            //serialize int array for randoms
            out = new ObjectOutputStream(new FileOutputStream("./src/SaveFiles/randoms.ser"));
            out.writeObject(randoms);
            out.flush();
            out.close();
        } catch (IOException ex) {
            Logger.getLogger(PlayPnl.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                out.close();
            } catch (IOException ex) {
                Logger.getLogger(PlayPnl.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formComponentShown

    private void HomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeActionPerformed
        // TODO add your handling code here:
        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout)layout;
            cl.show(getParent(), "MAIN PANEL");
        }
    }//GEN-LAST:event_HomeActionPerformed

    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitBtnActionPerformed

    private void SoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SoundActionPerformed

        LayoutManager layout = getParent().getLayout();
        if (layout instanceof CardLayout) {
            CardLayout cl = (CardLayout) layout;
            cl.show(getParent(), "SOUND");
        }
    }//GEN-LAST:event_SoundActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BtnAnimal;
    private javax.swing.JLabel BtnColour;
    private javax.swing.JLabel BtnNumber;
    private javax.swing.JLabel BtnShape;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JButton Home;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel Play_Background;
    private javax.swing.JLabel ScreenLabel;
    private javax.swing.JButton Sound;
    private javax.swing.JLabel curPlayer;
    // End of variables declaration//GEN-END:variables
}
